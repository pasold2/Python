import tkinter as tk
import random

GRID_SIZE = 20
GRID_WIDTH = 30
GRID_HEIGHT = 20

class SnakeGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Snake Game")

        self.canvas = tk.Canvas(root, width=GRID_SIZE*GRID_WIDTH, height=GRID_SIZE*GRID_HEIGHT, bg="black")
        self.canvas.pack()

        self.snake = [(5, 5), (4, 5), (3, 5)]
        self.direction = (1, 0)
        self.food = None
        self.game_over = False

        self.root.bind("<Key>", self.change_direction)
        self.spawn_food()
        self.update()

    def draw_square(self, x, y, color):
        x1 = x * GRID_SIZE
        y1 = y * GRID_SIZE
        x2 = x1 + GRID_SIZE
        y2 = y1 + GRID_SIZE
        self.canvas.create_rectangle(x1, y1, x2, y2, fill=color, outline="")

    def spawn_food(self):
        while True:
            x = random.randint(0, GRID_WIDTH - 1)
            y = random.randint(0, GRID_HEIGHT - 1)
            if (x, y) not in self.snake:
                self.food = (x, y)
                break

    def change_direction(self, event):
        key = event.keysym
        if key == "Up" and self.direction != (0, 1):
            self.direction = (0, -1)
        elif key == "Down" and self.direction != (0, -1):
            self.direction = (0, 1)
        elif key == "Left" and self.direction != (1, 0):
            self.direction = (-1, 0)
        elif key == "Right" and self.direction != (-1, 0):
            self.direction = (1, 0)

    def update(self):
        if self.game_over:
            self.canvas.create_text(GRID_SIZE*GRID_WIDTH/2, GRID_SIZE*GRID_HEIGHT/2,
                                    text="GAME OVER", fill="red", font=("Arial", 24))
            return

        head_x, head_y = self.snake[0]
        new_head = (head_x + self.direction[0], head_y + self.direction[1])

        if (
            new_head in self.snake or
            not (0 <= new_head[0] < GRID_WIDTH) or
            not (0 <= new_head[1] < GRID_HEIGHT)
        ):
            self.game_over = True
        else:
            self.snake.insert(0, new_head)
            if new_head == self.food:
                self.spawn_food()
            else:
                self.snake.pop()

        self.canvas.delete("all")
        for x, y in self.snake:
            self.draw_square(x, y, "green")
        if self.food:
            self.draw_square(self.food[0], self.food[1], "red")

        self.root.after(100, self.update)

# Iniciar o jogo
if __name__ == "__main__":
    root = tk.Tk()
    game = SnakeGame(root)
    root.mainloop()
